#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\date{}
\end_preamble
\use_default_options false
\master guida.lyx
\maintain_unincluded_children true
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "palatino" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Problemi territoriali risolti
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Questo documento è solo per rendere la compilazione più veloce, una volta
 che un problema viene considerato definitivo viene copiato e incollato
 nel file corretto (il mio computer non è velocissimo, ci si arrangia come
 si può :-)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Radioanalisi fossile - Territoriali 2018
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsection*
Radioanalisi fossile (xray)
\end_layout

\begin_layout Subsubsection*
Punteggio massimo: 19
\end_layout

\begin_layout Subsubsection*
\noindent
Descrizione del problema
\end_layout

\begin_layout Plain Layout
È stato appena ritrovato un fossile della rarissima specie 
\emph on
Canis mojitus albus
\emph default
, ritenuta antenata della più comune 
\emph on
Canis mojitus familiaris
\emph default
.
 Per analizzarlo, gli scienziati devono trattarlo con delle radiazioni:
 ogni centimetro dell'osso deve riceverne una precisa quantità.
 La macchina che fa il trattamento può applicare radiazioni in modo uniforme
 su un qualsiasi segmento contiguo: calcola quante volte deve essere azionata
 la macchina per ottenere la giusta quantità di radiazioni su ogni punto
 dell'osso.
\end_layout

\begin_layout Plain Layout
L'osso da trattare è lungo 
\series bold
N
\series default
 centimetri, numerati da 1 a 
\series bold
N
\series default
.
 Il centimetro 
\emph on
i
\emph default
 deve ricevere una quantità di radiazioni specificata da un numero naturale
 R
\begin_inset script subscript

\begin_layout Plain Layout
i
\end_layout

\end_inset

.
 Il numero 
\series bold
N
\series default
 ed i numeri 
\begin_inset Formula $R_{1}\ldots R_{N}$
\end_inset

 sono dati in input.
\end_layout

\begin_layout Plain Layout
La macchina viene azionata specificando due numeri interi positivi 
\emph on
a
\emph default
 e 
\emph on
b
\emph default
, che indicano gli estremi del segmento di osso su cui la macchina opera
 (
\begin_inset Formula $a\leq b$
\end_inset

).
 Dopo tale azionamento, tutti i centimetri da 
\emph on
a
\emph default
 a 
\emph on
b
\emph default
 dell'osso accumulano 1 unità di radiazioni.
\end_layout

\begin_layout Plain Layout
Dopo aver azionato la macchina un certo numero di volte, la quantità di
 radiazioni ricevute sul centimetro 
\emph on
i
\emph default
 si può conoscere contando quante volte una radiazione ha operato su quella
 zona (ovvero, quante volte la macchina è stata azionata con valori tali
 per cui 
\begin_inset Formula $a\leq i\leq b$
\end_inset

).
\end_layout

\begin_layout Plain Layout
Calcola il numero minimo di volte in cui è necessario azionare la macchina
 affinché ciascuna zona 
\emph on
i
\emph default
 riceva esattamente la quantità di radiazioni richiesta 
\begin_inset Formula $R_{i}$
\end_inset

.
\end_layout

\begin_layout Subsubsection*
Dati di input
\end_layout

\begin_layout Plain Layout
La prima riga del file di input contiene un intero T, il numero di casi
 di test.
 Seguono T casi di test, numerati da 1 a T.
 Ogni caso di test è preceduto da una riga vuota.
\end_layout

\begin_layout Plain Layout
In ciascun caso di test, la prima riga contiene l'intero 
\emph on
N
\emph default
.
 La seconda riga contiene gli 
\emph on
N
\emph default
 valori 
\begin_inset Formula $R_{1}\ldots R_{N}$
\end_inset

 separati da spazio.
\end_layout

\begin_layout Subsubsection*
Dati di output
\end_layout

\begin_layout Plain Layout
Il file di output deve contenere la risposta ai casi di test che sei riuscito
 a risolvere.
 Per ogni caso di test che hai risolto, il file di output deve contenere
 una riga con la dicitura
\end_layout

\begin_layout Verbatim

Case #t: p
\end_layout

\begin_layout Plain Layout
dove 
\emph on
t
\emph default
 è il numero del caso di test (a partire da 1) e 
\emph on
p
\emph default
 è è il minimo numero di volte in cui la macchina deve essere azionata.
\end_layout

\begin_layout Subsubsection*
Assunzioni
\end_layout

\begin_layout Itemize

\emph on
T
\emph default
=19, sono presenti 19 casi di prova.
\end_layout

\begin_layout Itemize
1≤N≤1000, ovvero, l'osso è lungo al massimo 1000 centimetri.
\end_layout

\begin_layout Itemize
0≤R
\begin_inset script subscript

\begin_layout Plain Layout
i
\end_layout

\end_inset

≤1000, ogni centimetro può dover ricevere una quantità di radiazione fino
 a 1000.
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="2.5in">
<column alignment="left" valignment="top" width="5cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File input.txt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File output.txt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
2
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
1 2 3 1
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
100 0 1 1

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
Case #1: 3
\end_layout

\begin_layout Plain Layout

\family typewriter
Case #2: 101
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Spiegazione
\end_layout

\begin_layout Plain Layout
\noindent
Nel 
\series bold
primo caso d'esempio
\series default
, è possibile azionare la macchina ad esempio nel seguente modo:
\end_layout

\begin_layout Enumerate
\noindent
segmento da 
\emph on
a
\emph default
=2 a 
\emph on
b
\emph default
=3
\end_layout

\begin_layout Enumerate
\noindent
segmento da 
\emph on
a
\emph default
=1 a 
\emph on
b
\emph default
=4
\end_layout

\begin_layout Enumerate
\noindent
segmento da 
\emph on
a
\emph default
=3 a 
\emph on
b
\emph default
=3
\end_layout

\begin_layout Plain Layout
\noindent
Graficamente:
\end_layout

\begin_layout Verbatim
\noindent
.
 x x .
 <-- azionamento 1
\end_layout

\begin_layout Verbatim
\noindent
x x x x <-- azionamento 2
\end_layout

\begin_layout Verbatim
\noindent
.
 .
 x .
 <-- azionamento 3
\end_layout

\begin_layout Verbatim
\noindent
-------
\end_layout

\begin_layout Verbatim
\noindent
1 2 3 1 <-- totale radiazione accumulata
\end_layout

\begin_layout Plain Layout
\noindent
Non ci sono soluzioni con solo 2 azionamenti o meno, quindi la risposta
 corretta è 3.
\end_layout

\begin_layout Plain Layout
\noindent
Nel 
\series bold
secondo caso d'esempio
\series default
, è possibile azionare la macchina ad esempio nel seguente modo:
\end_layout

\begin_layout Enumerate
\noindent
segmento da 
\emph on
a
\emph default
=1a 
\emph on
b
\emph default
=1(ripeti 100 volte)
\end_layout

\begin_layout Enumerate
\noindent
segmento da 
\emph on
a
\emph default
=3 a 
\emph on
b
\emph default
=4
\end_layout

\begin_layout Plain Layout
\noindent
Non ci sono soluzioni con solo 100 azionamenti o meno, quindi la risposta
 corretta è 101.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Suggerimenti
\end_layout

\begin_layout Itemize
Quante volte deve essere irradiato un centimetro di osso per ottenere la
 quantità richiesta 
\begin_inset Formula $R_{i}$
\end_inset

?
\end_layout

\begin_layout Itemize
Se ogni centimetro venisse irradiato separatamente da ogni altro quante
 operazioni di irradiamento sarebbero necessarie in totale? Sarebbero troppe?
\end_layout

\begin_layout Itemize
Se invece si irradiasse tutto l'osso un numero di volte pari al massimo
 valore di 
\begin_inset Formula $R_{i}$
\end_inset

, il risultato comporterebbe un numero minimo di irraggiamenti, ma ogni
 parte sarebbe irradiata correttamente?
\end_layout

\begin_layout Itemize
Fra le due situazioni precedenti, entrambe estreme, come raggiungere la
 situazione richiesta?
\end_layout

\begin_layout Itemize
Se è possibile sembra convenga irradiare ogni volta un intervallo il più
 ampio possibile, ma quali sono le condizioni per cui ciò porta a un risultato
 valido? 
\end_layout

\begin_layout Itemize
Esiste una rappresentazione grafica che può aiutare a comprendere meglio
 il problema?
\end_layout

\begin_layout Subsection
Soluzione
\end_layout

\begin_layout Standard
Un modo di rappresentare il problema che può aiutare a vedere la soluzione
 è quello di pensare ad ogni centimetro di osso come una 
\begin_inset Quotes eld
\end_inset

costruzione
\begin_inset Quotes erd
\end_inset

 composta da 
\begin_inset Formula $R_{i}$
\end_inset

 mattoncini sovrapposti e quindi arrivare a una rappresentazione come quella
 in figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:rappresentazione-osso"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../materiali/problemi territoriali/2018_radioanalisi fossile/esempio.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:rappresentazione-osso"

\end_inset

Come risulterebbe il primo esempio del testo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Perchè una rappresentazione del genere può aiutare? Si pensi alle due situazioni
 estreme poste nei suggerimenti e si provi a rappresentarle con delle situazioni
 nelle quali producano dei risultati corretti, ottenendo ad esempio quanto
 si può vedere in figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Due-casi-estremi"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/xubuntu/guida_territoriali/materiali/problemi territoriali/2018_radioanalisi fossile/casi.eps
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Due-casi-estremi"

\end_inset

Due casi estremi
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nel caso (
\emph on
a
\emph default
),
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},frame=lr,language={C++},numbers=left,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

int osso[1001][1001];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void inizializza()
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    for (int i = 0 ; i < 1001; i++)
\end_layout

\begin_layout Plain Layout

        for (int j = 0; j < 1001; j++)
\end_layout

\begin_layout Plain Layout

            osso[i][j] = 0;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void riempi_colonna(int c, int n)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    for (int i = 0; i < n; i++)
\end_layout

\begin_layout Plain Layout

        osso[i][c] = 1;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int intervalli(int r, int n)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    int i = 0;
\end_layout

\begin_layout Plain Layout

    int conta = 0;
\end_layout

\begin_layout Plain Layout

    while (osso[r][i] == 0) i++;
\end_layout

\begin_layout Plain Layout

    while (i < n)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        while(i < n && osso[r][i] == 1) i++;
\end_layout

\begin_layout Plain Layout

        while(i < n && osso[r][i] == 0) i++;
\end_layout

\begin_layout Plain Layout

        if (i < n) conta++;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return conta + 1;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int main()
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    ifstream in("input.txt");
\end_layout

\begin_layout Plain Layout

    ofstream out("output.txt");
\end_layout

\begin_layout Plain Layout

    int T;
\end_layout

\begin_layout Plain Layout

    in >> T;
\end_layout

\begin_layout Plain Layout

    for (int test = 1; test <= T; test++)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        int n, massimo = 0;
\end_layout

\begin_layout Plain Layout

        out << "Case #" << test << ": ";
\end_layout

\begin_layout Plain Layout

        inizializza();
\end_layout

\begin_layout Plain Layout

        in >> n;
\end_layout

\begin_layout Plain Layout

        for (int i = 0; i < n; i++)
\end_layout

\begin_layout Plain Layout

        {
\end_layout

\begin_layout Plain Layout

            int temp;
\end_layout

\begin_layout Plain Layout

            in >> temp;
\end_layout

\begin_layout Plain Layout

            if (temp > massimo)
\end_layout

\begin_layout Plain Layout

                massimo = temp;
\end_layout

\begin_layout Plain Layout

            riempi_colonna(i, temp);
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        int movimenti = 0;
\end_layout

\begin_layout Plain Layout

        for (int i = 0; i < massimo; i++)
\end_layout

\begin_layout Plain Layout

            movimenti += intervalli(i,n);
\end_layout

\begin_layout Plain Layout

        out << movimenti << endl;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return 0;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
