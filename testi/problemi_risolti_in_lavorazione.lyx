#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\date{}
\end_preamble
\use_default_options false
\master guida.lyx
\maintain_unincluded_children true
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "palatino" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Problemi territoriali risolti
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Questo documento è solo per rendere la compilazione più veloce, una volta
 che un problema viene considerato definitivo viene copiato e incollato
 nel file corretto (il mio computer non è velocissimo, ci si arrangia come
 si può :-)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Escursione - Territoriali 2018
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsection*
Escursione (escursione)
\end_layout

\begin_layout Subsubsection*
Punteggio massimo: 27
\end_layout

\begin_layout Subsubsection*
\noindent
Descrizione del problema
\end_layout

\begin_layout Plain Layout
Mojito vuole pianificare un'escursione sulle colline di Volterra.
 Ha a disposizione una mappa rettangolare, in cui è indicata l'altitudine
 della zona.
 Mojito vuole fare un percorso che parte dall'angolo in alto a sinistra
 della mappa e raggiunge l'angolo in basso a destra, in modo tale che il
 dislivello massimo che è costretto a fare ad ogni spostamento sia il mimimo
 possibile.
 Aiuta Mojito a calcolare questo dislivello!
\end_layout

\begin_layout Plain Layout
La mappa è una tabella di numeri interi: ciascuno esprime l'altitudine in
 metri nel corrispondente punto della mappa.
 La tabella è composta di 
\emph on
H
\emph default
 righe e 
\emph on
W
\emph default
 colonne, numerate rispettivamente da 
\emph on
1
\emph default
 a 
\emph on
H
\emph default
 e da 
\emph on
1
\emph default
 a 
\emph on
W
\emph default
.
 Nella cella di coordinate 
\emph on
(i,j)
\emph default
, ovvero in corrispondenza della riga 
\emph on
i
\emph default
 e della colonna 
\emph on
j
\emph default
, è indicato il valore dell'altitudine 
\begin_inset Formula $A_{i,j}$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Mojito inizia l'escursione dalla cella di coordinate (1,1), in alto a sinistra,
 ed arriva alla cella di coordinate (H,W), in basso a destra.
 Ogni minuto si sposta di esattamente una cella, in una della quattro possibili
 direzioni (in alto, in basso, a destra o a sinistra).
 Non può però uscire dalla mappa.
\end_layout

\begin_layout Plain Layout
Stabilito un percorso lungo la mappa, il 
\series bold
pericolo
\series default
 associato a quel percorso è 
\emph on
il massimo dislivello tra due celle consecutive lungo il percorso
\emph default
, ovvero la differenza di altitudine fra due celle consecutive: non cambia
 nulla se lo spostamento è in salita o in discesa.
\end_layout

\begin_layout Plain Layout
Calcola il pericolo minimo, fra tutti i percorsi possibili che partono dalla
 cella (1,1) e arrivano alla cella (H,W).
\end_layout

\begin_layout Subsubsection*
Dati di input
\end_layout

\begin_layout Plain Layout
La prima riga del file di input contiene un intero 
\emph on
T
\emph default
, il numero di casi di test.
 Seguono 
\emph on
T
\emph default
 casi di test, numerati da 1 a 
\emph on
T
\emph default
.
 Ogni caso di test è preceduto da una riga vuota.
\end_layout

\begin_layout Plain Layout
In ciascun caso di test, la prima riga contiene due interi 
\emph on
H
\emph default
 e 
\emph on
W
\emph default
 separati da uno spazio che corrispondono all'altezza, 
\emph on
H
\emph default
, e alla larghezza, 
\emph on
W
\emph default
, della mappa.
 Le successive 
\emph on
H
\emph default
 righe contengono ciascuna 
\emph on
W
\emph default
 interi separati da spazi, corrispondenti all'altitudine in metri lungo
 una riga della mappa.
 Ovvero, in ciascun caso di test, l'altitudine 
\emph on
Ai,j
\emph default
 alle coordinate 
\emph on
i
\emph default
 e 
\emph on
j
\emph default
 appare sulla riga (
\emph on
i
\emph default
+1)-esima, in posizione 
\emph on
j
\emph default
.
\end_layout

\begin_layout Subsubsection*
Dati di output
\end_layout

\begin_layout Plain Layout
Il file di output deve contenere la risposta ai casi di test che sei riuscito
 a risolvere.
 Per ogni caso di test che hai risolto, il file di output deve contenere
 una riga con la dicitura
\end_layout

\begin_layout Verbatim

Case #t: p
\end_layout

\begin_layout Plain Layout
dove 
\emph on
t
\emph default
 è il numero del caso di test (a partire da 1) e 
\emph on
p
\emph default
 è il minimo valore di pericolo trovato per quel test case.
\end_layout

\begin_layout Subsubsection*
Assunzioni
\end_layout

\begin_layout Itemize

\emph on
T
\emph default
=27, ci sono 27 casi di prova.
\end_layout

\begin_layout Itemize
1≤
\emph on
H,W
\emph default
≤100, la mappa ha dimensione massima 100×100.
\end_layout

\begin_layout Itemize
(1,1)≠(
\emph on
H,W
\emph default
), ovvero la mappa è abbastanza grande da avere partenza e arrivo in punti
 diversi.
\end_layout

\begin_layout Itemize
1≤
\emph on
Ai,j
\emph default
≤1.000.000, l'altitudine in ogni cella è compresa fra 1 e 1.000.000.
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="2.5in">
<column alignment="left" valignment="top" width="5cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File input.txt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File output.txt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
3
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
2 2
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
100 150
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
110 130
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
4 4
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
1 5 6 7
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
2 4 3 8
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
2 9 2 8
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
3 3 2 9
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset VSpace defskip
\end_inset


\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
1 10
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
2 4 6 8 10 12 14 16 18 20
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #1: 20 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #2: 1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #3: 2
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection*
Spiegazione
\end_layout

\begin_layout Plain Layout
\noindent
Nel primo caso d'esempio, Mojito sceglie il percorso:
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../materiali/problemi territoriali/2018_escursione/percorso1.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
ovvero, con i seguenti spostamenti:
\end_layout

\begin_layout Itemize

\emph on
in basso
\emph default
, da(1,1) a (2,1), con un dislivello pari a 110−100=10 
\end_layout

\begin_layout Itemize

\emph on
a destra
\emph default
, da (2,1) a (2,2)=(H,W), con un dislivello pari a 130−110=20.
\end_layout

\begin_layout Plain Layout
Il pericolo del percorso è 20 (il massimo fra i dislivelli, 10 e 20).
\end_layout

\begin_layout Plain Layout
Non ci sono percorsi migliori, quindi la risposta corretta è 20.
 
\end_layout

\begin_layout Plain Layout
L'altro percorso possibile è:
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../materiali/problemi territoriali/2018_escursione/percorso2.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
che ha dislivelli 50 e 20, e quindi ha pericolo 50.
\end_layout

\begin_layout Plain Layout
Nel secondo caso d'esempio, Mojito sceglie il percorso:
\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../materiali/problemi territoriali/2018_escursione/percorso3.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
Gli spostamenti hanno tutti dislivello 0 o 1, quindi il pericolo del percorso
 è 1.
 Non ci sono percorsi di pericolo pari a 0, quindi la risposta corretta
 è 1.
\end_layout

\begin_layout Plain Layout
Nel terzo caso d'esempio c'è un solo percorso possibile.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Suggerimenti
\end_layout

\begin_layout Itemize
Come in altri esercizi (ad esempio 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Esempio:-Mappa-antica"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Trova-la-parola"

\end_inset

) si ha una mappa che è una griglia rettangolare (eventualmente quadrata):
 quali sono le similitudini e quali le differenze?
\end_layout

\begin_layout Itemize
Possono essere utilizzati gli stessi approcci usati in quei problemi o bisogna
 aggiungere qualcosa di diverso?
\end_layout

\begin_layout Itemize
Considerando che il percorso può contenere una serie di svolte in una qualsiasi
 delle quattro direzioni, posso limitarmi a esplorare la griglia con due
 cicli 
\emph on
for
\emph default
 organizzati per righe e colonne?
\end_layout

\begin_layout Itemize
Se con la ricorsione e facendo 
\emph on
backtracking
\emph default
 esploro tutti i sentieri possibili, date le dimensioni del problema, è
 possibile che risolva tutti i casi di test in tempo ragionevole?
\end_layout

\begin_layout Itemize
Se il problema diventa il tempo impiegato e non più la soluzione in sè,
 è possibile migliorare l'algoritmo in modo da ottenere tutti i risultati
 in un tempo compatibile a quello di gara?
\end_layout

\begin_layout Subsection
Soluzione
\end_layout

\begin_layout Standard
Chiaramente il problema presenta delle similitudini con quelli indicati
 e quindi l'approccio utilizzato sarà simile e farà uso della ricorsione.
 Si vedrà adesso come arrivare a due diverse soluzioni: la prima, concettualment
e più semplice, non permetterà di prendere tutti i punti, la seconda, che
 non è altro che un'evoluzione 
\emph on
furba
\emph default
 della prima, invece farà punteggio pieno.
\end_layout

\begin_layout Standard
L'idea di base è quella di usare la ricorsione per 
\begin_inset Quotes eld
\end_inset

esplorare
\begin_inset Quotes erd
\end_inset

 tutti i percorsi possibili e, man mano che li si esplorano, si tiene traccia
 del salto più alto che si è costretti a fare.
 Quando un ramo della ricorsione arriva alla casella finale, quella in posizione
 H-1, W-1, allora si verifica se il salto più alto di quel percorso è più
 basso di quello finora migliore, se sì si memorizza la nuova soluzione
 temporanea, in ogni caso, tramite 
\emph on
backtracking
\emph default
 si torna indietro e si esplorano altri percorsi.
\end_layout

\begin_layout Standard
Il grosso limite di questa soluzione, come si vedrà, è che il numero di
 percorsi ha una crescita esponenziale, quindi anche con una dimensione
 della griglia piuttosto piccola, non si riesce ad arrivare a una soluzione
 in tempi ragionevoli.
\end_layout

\begin_layout Standard
Il codice comunque è il seguente:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},frame=lr,language={C++},numbers=left,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

int mappa[100][100];
\end_layout

\begin_layout Plain Layout

int soluzione;
\end_layout

\begin_layout Plain Layout

int H, W;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void visita(int r, int c, int salto)
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    if (salto >= soluzione)
\end_layout

\begin_layout Plain Layout

        return;
\end_layout

\begin_layout Plain Layout

    if (r == H - 1 && c == W - 1)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        soluzione = salto;
\end_layout

\begin_layout Plain Layout

        return;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    int temp = mappa[r][c];
\end_layout

\begin_layout Plain Layout

    mappa[r][c] = -1;
\end_layout

\begin_layout Plain Layout

    struct {
\end_layout

\begin_layout Plain Layout

		int i, j;
\end_layout

\begin_layout Plain Layout

	} direzioni[] = {{1,0},{0,1},{-1,0},{0,-1}};
\end_layout

\begin_layout Plain Layout

    for (int d = 0; d < 4; d++)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

		int i = direzioni[d].i, j = direzioni[d].j;
\end_layout

\begin_layout Plain Layout

		if (r+i >= 0 && c+j >= 0 && r+i < H && c+j < W &&
\end_layout

\begin_layout Plain Layout

			mappa[r+i][c+j] != -1)
\end_layout

\begin_layout Plain Layout

			{
\end_layout

\begin_layout Plain Layout

				if (salto > abs(temp - mappa[r+i][c+j]))
\end_layout

\begin_layout Plain Layout

					visita(r+i,c+j, salto);
\end_layout

\begin_layout Plain Layout

				else
\end_layout

\begin_layout Plain Layout

					visita(r+i,c+j, abs(temp - mappa[r+i][c+j]));
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

    mappa[r][c] = temp;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

int main()
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

    ifstream in("input.txt");
\end_layout

\begin_layout Plain Layout

    ofstream out("output.txt");
\end_layout

\begin_layout Plain Layout

    int T;
\end_layout

\begin_layout Plain Layout

    in >> T;
\end_layout

\begin_layout Plain Layout

    for (int test = 1; test <= T; test++)
\end_layout

\begin_layout Plain Layout

    {
\end_layout

\begin_layout Plain Layout

        out << "Case #" << test << ": ";
\end_layout

\begin_layout Plain Layout

        in >> H >> W;
\end_layout

\begin_layout Plain Layout

        for (int i = 0 ; i < H; i++)
\end_layout

\begin_layout Plain Layout

            for (int j = 0; j < W; j++)
\end_layout

\begin_layout Plain Layout

                in >> mappa[i][j];
\end_layout

\begin_layout Plain Layout

        soluzione = 10000000;
\end_layout

\begin_layout Plain Layout

        visita(0,0,0);
\end_layout

\begin_layout Plain Layout

        out << soluzione << endl;
\end_layout

\begin_layout Plain Layout

        cout << "Case #" << test << " finished" << endl;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

    return 0;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'algoritmo è tutto contenuto nella funzione ricorsiva visita, definita
 alla riga 5.
 Le prime due istruzioni (righe 7-8) sono fondamentali per poter prendere
 una serie cospicua di punti: il loro scopo è quello di fermare la soluzione
 una volta che, percorrendo un sentiero, si arriva a una situazione nella
 quale un salto contenuto nel percorso è più alto della migliore soluzione
 finora trovata.
 Questo chiaramente indica che è inutile andare avanti a esplorare quel
 percorso e quindi la ricorsione viene terminata.
 Senza quelle due righe il programma riuscirebbe a eseguire solo il primo
 caso di test, che è su una matrice 5x5, e inoltre il risultato non sarebbe
 corretto perchè in 
\emph on
soluzione
\emph default
 verrebbe scritta il costo dell'ultimo percorso esplorato, che poco probabilment
e sarebbe quello corretto.
\end_layout

\end_body
\end_document
