#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\date{}
\end_preamble
\use_default_options false
\master guida.lyx
\maintain_unincluded_children true
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "palatino" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indice
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Problemi territoriali risolti
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Questo documento è solo per rendere la compilazione più veloce, una volta
 che un problema viene considerato definitivo viene copiato e incollato
 nel file corretto (il mio computer non è velocissimo, ci si arrangia come
 si può :-)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tornello olimpico - Territoriali 2019
\end_layout

\begin_layout Standard
\begin_inset Box Framed
position "t"
hor_pos "c"
has_inner_box 0
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Subsection*
Tornello olimpico (tornello)
\end_layout

\begin_layout Subsubsection*
Punteggio massimo: 12
\end_layout

\begin_layout Subsubsection*
\noindent
Descrizione del problema
\end_layout

\begin_layout Plain Layout
Questo settembre, all’
\emph on
IIS G.B.
 Pentasuglia
\emph default
 di Matera, si terrà la fase finale delle Olimpiadi di Informatica.
 Come ogni anno Monica sarà presente e si occuperà di aspetti organizzativi
 legati alla logistica degli studenti come: assicurarsi che tutti siano
 presenti quando c’è da prendere un autobus, ritrovare e restituire la valigia
 perduta di qualche distratto, radunare gli studenti prima della gara in
 modo che nessuno rimanga per sbaglio in hotel, e così via.
 
\end_layout

\begin_layout Plain Layout
Per ottimizzare l’efficienza con la quale svolgerà queste mansioni Monica
 ha pianificato di installare un 
\series bold
tornello
\series default
 agli ingressi che le interessa controllare (come l’ingresso della sede
 di gara, dell’hotel, e così via).
 Un tornello permette a Monica di essere informata in modo automatizzato
 di quando uno studente entra o esce da una stanza: in risposta a questi
 due tipi di eventi, il tornello manderà rispettivamente un segnale +1 e
 un segnale -1 sul PC di Monica.
 Naturalmente, il tornello non fornisce alcuna informazione su chi effettivament
e è entrato/uscito.
 Al file di prevedere i movimenti degli studenti, Monica ha scelto una stanza
 da monitorare e sta cercando di dedurre (a partire dalla sequenza di segnali
 ±1 ricevuti dal tornello posto al suo ingresso) quale sia la risposta alla
 seguente domanda: 
\end_layout

\begin_layout Quote
«Qual è il 
\series bold
numero minimo di studenti diversi
\series default
 che hanno visitato la stanza?» 
\end_layout

\begin_layout Plain Layout

\series bold
Nota bene
\series default
: quando il tornello viene acceso (e comincia a “contare” gli ingressi e
 le uscite) è possibile che nella stanza 
\emph on
siano già presenti
\emph default
 alcuni studenti.
 Lo stesso vale quando il tornello viene spento: potrebbero 
\emph on
rimanere alcuni studenti
\emph default
 all’interno.
 Inoltre, per lo scopo di questo problema, supporremo che non ci siano ingressi/
uscite secondarie per accedere alla stanza monitorata, e che nella stanza
 in questione sia installato un solo tornello.
\end_layout

\begin_layout Plain Layout
Supponiamo per esempio che nel lasso di tempo in cui il tornello è operativo
 Monica riceva i segnali 
\family typewriter
-1 -1 -1
\family default
.
 In un caso di questo tipo, sarebbe possibile dedurre con certezza che 
\series bold
almeno 3 studenti
\series default
 hanno visitato la stanza: infatti, se ne sono usciti 3, vuol dire che dentro
 ce n’erano almeno 3.
 È possibile che nella stanza fossero presenti inizialmente più di 3 studenti,
 ma con i dati a disposizione non possiamo dirlo con certezza.
 
\end_layout

\begin_layout Plain Layout
Analogamente, nel caso in cui Monica ricevesse i segnali 
\family typewriter
+1 +1 +1
\family default
, si potrebbe affermare di nuovo che almeno 3 studenti hanno visitato la
 stanza.
 Infatti, dal momento che il tornello ha girato sempre nello stesso verso,
 non è pensabile che uno stesso studente sia entrato più volte (sarebbe
 dovuto uscire, prima di poter rientrare!) quindi sappiamo che il tornello
 è stato attivato sempre da persone diverse.
 
\end_layout

\begin_layout Plain Layout
Più complicato è invece il caso in cui Monica riceve i segnali 
\family typewriter
+1 -1 +1
\family default
.
 In questo caso infatti è possibile che 
\series bold
uno stesso studente
\series default
 sia entrato, poi uscito e successivamente rientrato, attivando il tornello
 3 volte.
 Quindi in questa situazione il minimo numero di studenti diversi che hanno
 visitato la stanza è 1.
 
\end_layout

\begin_layout Plain Layout
Aiuta Monica scrivendo un programma che, dati i segnali ottenuti da un tornello
 posizionato all’ingresso di una stanza, calcoli 
\series bold
il minimo numero di studenti diversi
\series default
 che hanno visitato quella stanza.
\end_layout

\begin_layout Subsubsection*
Dati di input
\end_layout

\begin_layout Plain Layout
La prima riga del file di input contiene un intero 
\emph on
T
\emph default
 , il numero di casi di test.
 Seguono 
\emph on
T
\emph default
 casi di test, numerati da 1 a 
\emph on
T
\emph default
 .
 Ogni caso di test è preceduto da una riga vuota.
 
\end_layout

\begin_layout Plain Layout
Ciascun caso di test è composto da due righe.
 La prima contiene il numero intero 
\emph on
N
\emph default
 : il numero di segnali ricevuti dal tornello.
 La seconda contiene 
\emph on
N
\emph default
 interi (ciascuno uguale a +1 o -1) separati da spazio: la sequenza di segnali
 ricevuti dal tornello.
\end_layout

\begin_layout Subsubsection*
Dati di output
\end_layout

\begin_layout Plain Layout
Il file di output deve contenere la risposta ai casi di test che sei riuscito
 a risolvere.
 Per ogni caso di test che hai risolto, il file di output deve contenere
 una riga con la dicitura
\end_layout

\begin_layout Verbatim

Case #t: nf nc
\end_layout

\begin_layout Plain Layout
dove 
\family typewriter
t
\family default
 è il numero del caso di test (a partire da 1) e il valore 
\family typewriter
c
\family default
 è il minimo numero di studenti che hanno visitato la stanza.
\end_layout

\begin_layout Subsubsection*
Assunzioni
\end_layout

\begin_layout Itemize

\emph on
T
\emph default
 = 12, nei file di input che scaricherai saranno presenti esattamente 12
 casi di test.
 
\end_layout

\begin_layout Itemize
1 ≤ N ≤ 1 000 000.
 
\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="2.5in">
<column alignment="left" valignment="top" width="5cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File input.txt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
File output.txt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
4 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
3 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
-1 -1 -1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
3 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
+1 +1 +1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
3 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
+1 -1 +1 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
10 
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
-1 +1 +1 +1 -1 +1 +1 +1 -1 +1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #1: 3
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #2: 3
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #3: 1
\end_layout

\begin_layout Plain Layout

\family typewriter
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Case #4: 5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Suggerimenti
\end_layout

\begin_layout Itemize
Servono dei suggerimenti?
\end_layout

\begin_layout Subsection
Soluzione
\end_layout

\begin_layout Standard
Come per le territoriali 2019, questo problema serve solo come banco di
 prova per verificare di essere in grado di utilizzare il sistema di sottoposizi
one ed avere un feedback sulla correttezza di quanto scritto.
 Al posto di spiegare come affrontarlo, dal momento che la soluzione è banale,
 ci si soffermerà invece su come è strutturato il programma il sorgente
 che viene fornito come spunto di partenza per scrivere la soluzione del
 problema.
 Da questa edizione, infatti, insieme al testo del problema viene fornito
 un 
\begin_inset Quotes eld
\end_inset

template
\begin_inset Quotes erd
\end_inset

 nel quale è già scritta tutta la parte di lettura/scrittura dell'I/O: viene
 lasciata allo studente la scelta di utilizzarlo oppure di scrivere il programma
 da zero, comunque può essere comodo perchè fa risparmiare qualche minuto
 e garantisce che la parte di I/O sia corretta.
\end_layout

\begin_layout Standard
Nella soluzione mostrata qua sotto, le uniche righe aggiunte per risolvere
 il problema sono la 11 e la 12, le altre erano già scritte nel template
 fornito dal sistema di gara.
 Come si può vedere il ciclo in riga 6 permette di iterare sui casi di test
 e, al suo interno, viene fatto l'input e l'output di ognuno dei singoli
 casi.
 
\end_layout

\begin_layout Standard
L'unica cosa che vale la pena notare solo le istruzioni che si trovano alle
 righe 2-3, che usano una funzione standard, la 
\family typewriter
\series bold
freopen
\family default
\series default
, che permette di ridirigere quelli che sono i canali standard di I/O, 
\emph on
stdin
\emph default
 e 
\emph on
stdout
\emph default
, normalmente associati alla tastiera e allo schermo rispettivamente, verso
 dei file, in questo caso il file 
\emph on
input.txt
\emph default
 fornirà l'input come fosse la tastiera e il file 
\emph on
output.txt
\emph default
 conterrà l'output che normalmente sarebbe andato a schermo.
 
\end_layout

\begin_layout Standard
L'aspetto comodo di questo approccio è che, semplicemente commentando quelle
 due righe, il programma tornerà a prendere l'input da tastiera e mandare
 l'output a schermo, senza nessuna modifica delle successive righe di codice.
 Va anche notato che non necessariamente vanno commentati entrambe: ad esempio
 può essere comodo commentare solo la seconda linea, in modo da prendere
 l'input dal file 
\emph on
input.txt
\emph default
 e mostrare invece l'output a video, per avere un feedback più immediato
 di cosa sta facendo il proprio programma.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},frame=lr,language={C++},numbers=left,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

int main() {
\end_layout

\begin_layout Plain Layout

    freopen("input.txt", "r", stdin);
\end_layout

\begin_layout Plain Layout

    freopen("output.txt", "w", stdout);
\end_layout

\begin_layout Plain Layout

    int T, t;
\end_layout

\begin_layout Plain Layout

    cin >> T;
\end_layout

\begin_layout Plain Layout

    for (t = 1; t <= T; t++) {
\end_layout

\begin_layout Plain Layout

        int N, F, C;
\end_layout

\begin_layout Plain Layout

        int nf, nc;
\end_layout

\begin_layout Plain Layout

        cin >> N >> F >> C;
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

        nf = N/F;
\end_layout

\begin_layout Plain Layout

        nc = (N%F)/C;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        cout << "Case #" << t << ": " << nf << " " << nc << endl;
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per quanto riguarda la soluzione vera e propria: la riga 11 calcola quanti
 filmati si possono scaricare semplicemente facendo una divisione intera
 tra N e F, poichè, per come è fatto il sistema dei tipi in C/C++, la divisione
 tra due interi da un intero che non è altro che il risultato della divisione
 privato della parte decimale.
 Fatto questo, la riga 12 calcola prima quanta parte dell'hard disk è rimasta
 per poter ospitare le canzoni, tramite l'operatore di modulo (%) e successivame
nte ripete quanto fatto per i filmati, usando la parte di hard disk rimasto
 e la dimensione delle canzoni.
\end_layout

\end_body
\end_document
